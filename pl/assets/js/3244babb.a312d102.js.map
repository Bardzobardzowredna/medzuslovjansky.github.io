{"version":3,"file":"assets/js/3244babb.a312d102.js","mappings":"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","sources":["webpack://interslavic-fun/./i18n/pl/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md","webpack://interslavic-fun/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["\n\nexport const frontMatter = {\n\tsidebar_position: 8\n};\nexport const contentTitle = 'Prosta gramatyka';\nexport const metadata = {\n  \"unversionedId\": \"learn/simple-grammar/index\",\n  \"id\": \"learn/simple-grammar/index\",\n  \"title\": \"Prosta gramatyka\",\n  \"description\": \"Gramatyka uproszczona, czyli Slovianto, to bardzo uproszczona forma języka międzysłowiańskiego, która pozwala osobom niesłowiańskim wyrazić się na bardzo podstawowym poziomie podczas odwiedzania krajów słowiańskich lub utrzymywania kontaktów ze Słowianami przez Internet. Gramatyka jest ograniczona do absolutnego minimum, a formy, które nie są bezwzględnie konieczne, nie są w ogóle używane. Ponieważ nie zawiera niczego, czego nie można znaleźć w językach słowiańskich, wynik nie będzie wyglądał ani nie brzmiał zbyt niezręcznie dla słowiańskich mówców, ale raczej będzie przypominał im język używany przez małe dzieci.\",\n  \"source\": \"@site/i18n/pl/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"sourceDirName\": \"learn/simple-grammar\",\n  \"slug\": \"/learn/simple-grammar/\",\n  \"permalink\": \"/pl/learn/simple-grammar/\",\n  \"draft\": false,\n  \"unlisted\": false,\n  \"editUrl\": \"https://github.com/medzuslovjansky/medzuslovjansky.github.io/edit/main/i18n/pl/docusaurus-plugin-content-docs/current/learn/simple-grammar/index.md\",\n  \"tags\": [],\n  \"version\": \"current\",\n  \"lastUpdatedAt\": 1692167612,\n  \"formattedLastUpdatedAt\": \"16 sie 2023\",\n  \"sidebarPosition\": 8,\n  \"frontMatter\": {\n    \"sidebar_position\": 8\n  },\n  \"sidebar\": \"learnSidebar\",\n  \"previous\": {\n    \"title\": \"Aromatyzowanie\",\n    \"permalink\": \"/pl/learn/vocabulary/flavourisation\"\n  },\n  \"next\": {\n    \"title\": \"1-й уровень\",\n    \"permalink\": \"/pl/learn/simple-grammar/level-1\"\n  }\n};\nexport const assets = {\n\n};\n\n/*@jsxRuntime automatic @jsxImportSource react*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nexport const toc = [];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components), {CustomBeforeSection, DocCardList, CustomAfterSection} = _components;\n  if (!CustomAfterSection) _missingMdxReference(\"CustomAfterSection\", true);\n  if (!CustomBeforeSection) _missingMdxReference(\"CustomBeforeSection\", true);\n  if (!DocCardList) _missingMdxReference(\"DocCardList\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      id: \"prosta-gramatyka\",\n      children: \"Prosta gramatyka\"\n    }), \"\\n\", _jsx(CustomBeforeSection, {}), \"\\n\", _jsxs(_components.p, {\n      children: [\"Gramatyka uproszczona, czyli \", _jsx(_components.code, {\n        children: \"Slovianto\"\n      }), \", to bardzo uproszczona forma języka międzysłowiańskiego, która pozwala osobom niesłowiańskim wyrazić się na bardzo podstawowym poziomie podczas odwiedzania krajów słowiańskich lub utrzymywania kontaktów ze Słowianami przez Internet. Gramatyka jest ograniczona do absolutnego minimum, a formy, które nie są bezwzględnie konieczne, nie są w ogóle używane. Ponieważ nie zawiera niczego, czego nie można znaleźć w językach słowiańskich, wynik nie będzie wyglądał ani nie brzmiał zbyt niezręcznie dla słowiańskich mówców, ale raczej będzie przypominał im język używany przez małe dzieci.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.span, {\n        className: \"notranslate\",\n        translate: \"no\",\n        children: \"Slovianto\"\n      }), \" może być również wykorzystany jako pierwszy krok w procesie nauki „prawdziwego” języka międzysłowiańskiego. Została tak skonstruowana, że ​​można ją sukcesywnie rozbudowywać o nowe elementy, które występują w bardziej rozbudowanych wersjach. W ten sposób wyróżniamy trzy różne poziomy, z których każdy dodaje nowe elementy, które zbliżają \", _jsx(_components.code, {\n        children: \"Slovianto\"\n      }), \" do Intersłowiańskiego:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Poziom 1\"\n        }), \" – najprostszy poziom: bez rodzaju, bez przypadków, tylko liczba pojedyncza/mnoga, jedna końcówka czasownika na czas\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Poziom 2\"\n        }), \" – wprowadzenie do płci, prosty model koniugacji czasowników (rzeczy, które można znaleźć we wszystkich językach słowiańskich)\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Roboczy tytuł \", _jsx(_components.code, {\n        children: \"Slovianto\"\n      }), \" to kontaminacja na „słowiańskie esperanto”. Ta nazwa, choć nieco żartobliwa, odnosi się do prostoty \", _jsx(_components.code, {\n        children: \"Slovianto\"\n      }), \": nie ma płci, przypadków, aspektów, mało koniugacji i nieregularności. Jednak na tym kończy się podobieństwo do esperanto, ponieważ środki uproszczenia \", _jsx(_components.code, {\n        children: \"Slovianto\"\n      }), \" są w rzeczywistości znacznie bardziej podobne do tych używanych przez Interlingua\"]\n    }), \"\\n\", _jsx(DocCardList, {}), \"\\n\", _jsx(CustomAfterSection, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["frontMatter","sidebar_position","contentTitle","metadata","assets","toc","_createMdxContent","props","_components","Object","assign","h1","p","code","span","ul","li","strong","components","CustomBeforeSection","DocCardList","CustomAfterSection","_missingMdxReference","children","id","className","translate","wrapper","MDXLayout","component","Error","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}